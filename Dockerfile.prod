# Production Dockerfile (multi-stage) using Node 20
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files and install all deps for build
COPY package*.json ./
RUN npm ci

# Copy source and build
COPY . .
RUN npm run build
RUN npm prune --omit=dev

# Production image
FROM node:20-alpine AS production
WORKDIR /app

# Copy pruned node_modules from builder and minimal files
COPY --from=builder /app/node_modules ./node_modules
COPY package*.json ./
ENV NODE_ENV=production

# Copy dist and server
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server

# Create non-root user
RUN addgroup -g 1001 -S appgroup && adduser -S appuser -G appgroup -u 1001
RUN chown -R appuser:appgroup /app
USER appuser

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

CMD ["npm", "run", "serve"]
